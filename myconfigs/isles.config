import "shared.config"
from "/home/gleb/deep_pipe/config_examples" import (
    "assets/training/msegm.config",
	"assets/data_source/cobrain/isles15.config"
	"assets/dataset/isles15.coreg.config",
    "brats.base.config",
    "assets/batch_iter/3d_patch_strat.config"
	"assets/model/deepmedic_els.config"
	"assets/problem/msegm.tf.config"
)
from dpipe.split.cv_111 import group_cv_111_pure_011_truncated
from dpipe.tf.model import TFModel
from dpipe.tf.utils import optimize as optimize_fn

makefile = "train_msegm_eval_light"
n_epochs = 60
batch_size = 64

split = group_cv_111_pure_011_truncated(
    n_splits = 5,
    val_size = 5,
    dataset = dataset,
    experiments_num=2
)

model = TFModel(
    model_core = model_core,
    logits2pred = logits2pred,
    logits2loss = logits2loss,
    optimize = optimize,
    # surgery_transfer_path="/home/gleb/exp/oasis/3/experiment_0/model"
)

train_model = commands.train_model(
    train=train,
    model=model,
    save_model_path=save_model_path,
    transfer_model_path="/home/gleb/exp/brats/9/experiment_0/model"
)

model_core = DeepMedicEls(
    with_dropout = True,
    dropout_rate = 0,
    downsampling_type = "sampling",
    n_chans_in = n_chans_in,
    n_chans_out = n_chans_out
)

optimize = optimize_fn(
    #lazy
    tf_optimizer_name = "MomentumOptimizer",
    use_nesterov = True,
    momentum = 0.6
)
