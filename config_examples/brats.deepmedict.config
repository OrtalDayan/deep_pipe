@extends(
    "brats.base.config"
    "assets/batch_iter/3d_patch.config"
	"assets/model/tnet3d.config"
	"assets/problem/segm.torch.config"
)

batch_size = 1
activation = torch_lib.nn.functional.relu

stride = 3

structure = [
    [[], [8, 16, 16, 32, 32], [64, 64]],
    [[8, 16, 16, 32, 32]],
]

torch_lib = meta:import(module="torch")

// Batch iter
x_patch_sizes = [[145, 178, 145]]
y_patch_size = [145, 178, 145]

optimize = torch_lib.optim.Adam

logits2loss = torch:NormalizedSoftmaxCrossEntropy(n_classes=n_chans_out)

batch_predict = batch_predict:patch_3d_fixed
    x_patch_sizes = [[145, 178, 145]]
    y_patch_size = [145, 178, 145]
    padding_mode = "min"
