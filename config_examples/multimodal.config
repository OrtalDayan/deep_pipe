@extends "assets/core/core.config"

// experiment steps
makefile = "train_msegm_threshold_eval"

// data
dataset = dataset_wrapper:cache_methods
    methods = ["load_x", "load_msegm", "load_segm"]
    dataset = dataset_wrapper:normalized
        mean = true
        std = true
        dataset = dataset:csv_multi
            modalities = ["DWI" "Flair" "T1" "T2"]
            targets = ["OT"]
            data_path = data_path
            metadata_rpath = metadata_rpath

data_path = "/nmnt/x04-hdd/ISLES/"
metadata_rpath = "siss2015.csv"

split = split:cv_111
    n_splits = 5
    val_size = 5
    dataset = dataset

// model
model_core = model_core:torch_enet2d
    n_chans_in = dataset.n_chans_x
    n_chans_out = dataset.n_chans_msegm

T = meta:import
    module = "torch"

logits2pred = T.nn.Sigmoid()

model = model:torch
    model_core = model_core
    logits2pred = logits2pred
    logits2loss = torch:bce_logits
    optimize = T.optim.Adam

frozen_model = frozen_model:torch
    model_core = model_core
    logits2pred = logits2pred
    restore_model_path = console.restore_model_path

// metrics
metrics = meta:import(module = "dpipe.medim.metrics")
multiple = {
    "max_dice": metrics.calc_max_dices
}

// train and evaluation
batch_iter_factory = batch_iter_factory:fin
    get_batch_iter = batch_iter:slices
        @lazy
        ids = train_ids
        load_x = load_x
        load_y = load_y
        batch_size = 20
        shuffle = true

batch_predict = batch_predict:slice2d()

train = train:train
    @lazy
    atol = 0.01
    lr_dec_mul = 0.7
    lr_init = 1e-3
    n_epochs = 2
    patience = 5
    rtol = 0.03
    log_path = console.log_path

    validator = validator:validate
        @lazy
        load_x = load_x
        load_y = load_y
        ids = val_ids
        multiple = multiple

    model = model
    train_batch_iter_factory = batch_iter_factory
    batch_predict = batch_predict

// misc
load_x = dataset.load_x
load_y = dataset.load_msegm

// commands
compute_dices = command:compute_dices
    load_msegm = dataset.load_msegm
    predictions_path = console.predictions_path
    dices_path = console.dices_path

find_thresholds = command:find_dice_threshold
    load_msegm = dataset.load_msegm
    ids = ids
    predictions_path = console.predictions_path
    thresholds_path = thresholds_path

binarize = command:transform
    input_path = console.input_path
    output_path = console.output_path
    transform_fn = transform:binarize
        @lazy
        thresholds = io:json
            path = thresholds_path

thresholds_path = console.thresholds_path