import(
    "brats.base.config"
    "assets/batch_iter/3d_patch.config"
	"assets/model/tnet3d.config"
	"assets/problem/segm.torch.config"
)

batch_size = 1
activation = torch_lib.nn.functional.relu

stride = 2

structure = [
    [[],   [8, 16],  [32, 64, 64, 16]],
    [[8],  [8 , 8],  [32, 32]],
    [[16], [16, 16], [32, 32]],
    [[32], [32, 32], [96, 64]],
    [[64, 64, 64]]
]

torch_lib = meta:import(module="torch")

// Batch iter
x_patch_sizes = [[145, 177, 145]]
y_patch_size = [145, 177, 145]

logits2loss = torch:NormalizedSoftmaxCrossEntropy(n_classes=n_chans_out)

batch_predict = batch_predict:patch_3d_fixed
    x_patch_sizes = [[177, 209, 177]]
    y_patch_size = [177, 209, 177]
    padding_mode = "min"

optimize = torch_lib.optim.Adam
