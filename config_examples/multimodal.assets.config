@from "assets" extends(
    "core/core.config"
    "model/tnet3d.config"
    "problem/msegm.base.config"
    "batch_iter/3d_patch.config"

    "dataset/isles15.config"
)

data_path = "/nmnt/x04-hdd/ISLES/"


// model
structure = [
    [[16, 16], [], [48, 48]],
        [[32, 64, 32]],
]
stride = 2
activation = torch.nn.functional.relu
logits2pred = torch.nn.Sigmoid()
logits2loss = torch:bce_logits
optimize = torch.optim.Adam

// train and evaluation
batch_size = 1
n_iters_per_batch = 100
n_epochs = 2

x_patch_sizes = [y_patch_size]
y_patch_size = [101, 101, 101]

batch_predict = batch_predict:patch_3d_fixed
    x_patch_sizes = x_patch_sizes
    y_patch_size = y_patch_size
    padding_mode = "min"

metrics = meta:import(module = "dpipe.medim.metrics")
multiple = {
    "max_dice": metrics.calc_max_dices
}

train = train:train
    @lazy
    atol = 0.01
    lr_dec_mul = 0.7
    lr_init = 1e-3
    n_epochs = n_epochs
    patience = 5
    rtol = 0.03
    log_path = console.log_path

    validator = validator:validate
        @lazy
        load_x = load_x
        load_y = load_y
        ids = val_ids
        multiple = multiple

    model = model
    train_batch_iter_factory = batch_iter_factory
    batch_predict = batch_predict